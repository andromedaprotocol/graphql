# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AddressListAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  isInclusive: Boolean!
  modules: [AndrModule!]
  operators: [String!]!
  primitiveContract: String
}

type AnchorAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String!
}

type AndrAddress {
  identifier: String!
}

type AndrAddressPercent {
  percent: Float!
  recipient: AndrRecipient!
}

type AndrCW20Coin {
  address: String!
  amount: Int!
}

type AndrLogo {
  data: String!
  link: String!
  mimeType: String!
}

type AndrMarketingInfo {
  description: String
  logo: AndrLogo
  marketing: String
  project: String
}

type AndrMinterResponse {
  cap: Int
  minter: String!
}

type AndrMissionComponent {
  adoType: String!
  instantiateMsg: String!
  name: String!
}

type AndrModule {
  address: AndrAddress!
  isMutable: Boolean!
  moduleType: AndrModuleType!
}

enum AndrModuleType {
  AddressList
  Offers
  Rates
  Receipt
}

type AndrRateInfo {
  description: String!
  isAdditive: Boolean!
  rate: AndrRateType!
  receivers: [AndrRecipient!]!
}

enum AndrRateType {
  External
  Flat
  Percent
}

type AndrRecipient {
  address: AndrAddress!
  msg: String
}

enum AndrStrategyType {
  Anchor
}

type AndrYieldStrategy {
  address: String!
  strategy_type: AndrStrategyType!
}

scalar Anything

type AuctionAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  auctionId: Int!
  coinDenom: String!
  contractQuery: Anything!
  end_time: String!
  highBidderAddr: AndrAddress!
  highBidderAmount: Int!
  isCancelled: Boolean!
  modules: [AndrModule!]
  operators: [String!]
  owner: String!
  primitiveContract: String
  start_time: String!
  tokenAddress: String!
  tokenId: String!
  whitelist: [AndrAddress!]
}

interface BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
}

type Coin {
  amount: String!
  denom: String!
}

input CoinInput {
  amount: String!
  denom: String!
}

type CommissionRates {
  max_change_rate: String!
  max_rate: String!
  rate: String!
}

type CrowdfundAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String!
  tokenAddress: AndrAddress!
}

type DepositParams {
  max_deposit_period: Int!
  min_deposit: [Coin!]!
}

type MissionAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  mission: [AndrMissionComponent!]!
  modules: [AndrModule!]
  name: String!
  operators: [String!]!
  primitiveContract: String!
}

type OffersAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  andrCW721Contract: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
}

type OracleWhitelist {
  name: String!
  tobin_tax: String!
}

type ParameterChanges {
  key: String!
  subspace: String!
  value: String!
}

type PolicyConstraints {
  cap: Coin!
  change_max: String!
  rate_max: String!
  rate_min: String!
}

type PrimitiveAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]!
  primitiveContract: String
}

type Query {
  addresslist: AddressListAdo!
  adooffers: OffersAdo!
  anchor: AnchorAdo!
  auction: AuctionAdo!
  crowdfund: CrowdfundAdo!
  mission: MissionAdo!
  ping: String!
  primitive: PrimitiveAdo!
  rates: RatesAdo!
  receipt: ReceiptAdo!
  splitter: SplitterAdo!
  timelock: TimelockAdo!
  token: TokenAdo!
  vault: VaultAdo!
}

type RatesAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
  rates: [AndrRateInfo!]
}

type ReceiptAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  minter: String!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
}

type SimplePublicKey {
  key: String!
}

type SplitterAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
  recipients: [AndrAddressPercent!]
}

type StakeAuthorizationValidators {
  addresses: [String!]!
}

type TallyParams {
  quorum: String!
  threshold: String!
  veto_threshold: String!
}

type TimelockAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
}

type TokenAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  decimals: Int!
  initial_balances: [AndrCW20Coin!]!
  marketing: AndrMarketingInfo
  mint: AndrMinterResponse
  modules: [AndrModule!]
  name: String!
  operators: [String!]
  primitiveContract: String!
  symbol: String!
}

type ValConsPublicKey {
  key: String!
}

type ValidatorCommission {
  commission_rates: CommissionRates!
  update_time: String!
}

type ValidatorDescription {
  details: String!
  identity: String!
  moniker: String!
  security_contact: String!
  website: String!
}

type VaultAdo implements BaseAdo {
  adoId: String!
  adoName: String!
  adoType: String!
  contractQuery: Anything!
  modules: [AndrModule!]
  operators: [String!]
  primitiveContract: String
  strategies: [AndrYieldStrategy!]!
}

enum VoteOption {
  Abstain
  Empty
  No
  NoWithVeto
  Yes
}

type VotingParams {
  voting_period: Int!
}

type WeightedVoteOption {
  option: VoteOption!
  weight: String!
}
